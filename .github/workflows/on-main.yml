on:
  push:
    branch:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14.15.1'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install node packages
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp .npmrc.example .npmrc
        yarn --frozen-lockfile
    - name: Build
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: yarn build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14.15.1'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install node packages
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp .npmrc.example .npmrc
        yarn --frozen-lockfile
    - name: Run tests
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: yarn test
    - uses: actions/upload-artifact@v2
      with:
        name: Test Coverage
        path: coverage
        retention-days: 5
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14.15.1'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install node packages
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp .npmrc.example .npmrc
        yarn --frozen-lockfile
    - name: Lint
      env:
        GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: yarn lint
